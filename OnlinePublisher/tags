!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.5.4	//
BASEDIR	Makefile	/^BASEDIR = \/home\/cmsuser\/CMSVodafone30Jun\/$/;"	m
CC	Makefile	/^CC = \/usr\/bin\/g++ -g  $/;"	m
CClientConnect	Publisher.h	/^	CClientConnect():CTcpClient("EsmeClinet"){$/;"	f	class:CClientConnect
CClientConnect	Publisher.h	/^class CClientConnect:public CTcpClient{$/;"	c
CConfiguration	Configuration.cpp	/^CConfiguration::CConfiguration(){$/;"	f	class:CConfiguration
CConfiguration	Configuration.h	/^class CConfiguration{$/;"	c
CDBOperations	DBOperations.cpp	/^CDBOperations::CDBOperations() {$/;"	f	class:CDBOperations
CDBOperations	DBOperations.h	/^class CDBOperations {$/;"	c
CDBPicker	DBPicker.cpp	/^CDBPicker::CDBPicker(int iL_modId,int iL_numOfWorkerThreads){$/;"	f	class:CDBPicker
CDBPicker	DBPicker.h	/^class CDBPicker:public CThread{$/;"	c
CFLAGS	Makefile	/^CFLAGS = -D __LINUX__  -Wno-deprecated -D LINT_ARGS -g -fPIC -O2 #-fnon-call-exceptions $/;"	m
CG_Cfg	Main.cpp	/^CConfiguration CG_Cfg;$/;"	v
CG_EventLog	Main.cpp	/^CEventLog CG_EventLog;$/;"	v
CPublisher	Publisher.h	/^		CPublisher(){$/;"	f	class:CPublisher
CPublisher	Publisher.h	/^class CPublisher:public CThread{$/;"	c
CSubTask	Task.h	/^		CSubTask(std::string CL_tableName){$/;"	f	class:CSubTask
CSubTask	Task.h	/^class CSubTask{$/;"	c
CTask	Task.h	/^		CTask(int iL_taskId,int iL_msgType,int iL_expiryTime,int iL_langId,int iL_regDel,int iL_interfaceId,std::string CL_msg,std::string CL_taskName,std::string CL_srvCode,bool bL_isPause,int iL_channelId,int iL_dcs,std::string CL_OA,std::string CL_createdBy){$/;"	f	class:CTask
CTask	Task.h	/^class CTask{$/;"	c
DBOPERATIONS_H_	DBOperations.h	9;"	d
DBPICKER_H_	DBPicker.h	9;"	d
EXENAME	Makefile	/^EXENAME=Publisher.exe$/;"	m
GDEFINES	Makefile	/^GDEFINES =$/;"	m
INCLUDES	Makefile	/^INCLUDES = -I . -I ..\/Libs\/ -I ..\/ProtoBuf\/ProjectLibs\/ -I \/usr\/local\/include\/mysql++\/ -I\/usr\/include\/mysql\/$/;"	m
LIBS	Makefile	/^LIBS =  -L\/usr\/local\/lib -pthread -lcurl -lmysqlpp -lprotoc $/;"	m
LIB_ARCS	Makefile	/^LIB_ARCS= ..\/Libs\/CommonUtil_1_lnx.a ..\/ProtoBuf\/ProjectLibs\/CmsPFlib_1.0.a $/;"	m
OBJS	Makefile	/^OBJS =$(SRCS:%.cpp=%.o)$/;"	m
RELEASE_DATE	Main.cpp	6;"	d	file:
REL_VER	Main.cpp	5;"	d	file:
SRCS	Makefile	/^SRCS=$(wildcard *.cpp)$/;"	m
STATUS_ASSIGNED	Task.h	/^	STATUS_ASSIGNED=1,$/;"	e	enum:__SubtaskStatus
STATUS_COMPLETED	Task.h	/^	STATUS_COMPLETED=3$/;"	e	enum:__SubtaskStatus
STATUS_EXICUTING	Task.h	/^	STATUS_EXICUTING=2,$/;"	e	enum:__SubtaskStatus
STATUS_NONE	Task.h	/^	STATUS_NONE=0,$/;"	e	enum:__SubtaskStatus
SUBTASK_STATUS	Task.h	/^}SUBTASK_STATUS;$/;"	t
SUCCESS	DBOperations.h	12;"	d
TABLE_NOT_EXIST	DBOperations.h	13;"	d
__CONFIGURATIONS__	Configuration.h	2;"	d
__PUBLISHER_H_	Publisher.h	10;"	d
__SubtaskStatus	Task.h	/^typedef enum __SubtaskStatus{$/;"	g
__TASK_H_	Task.h	2;"	d
fnG_PrintCompanyBanner	Main.cpp	/^static void fnG_PrintCompanyBanner(char* pscL_ModuleName,char* pscL_Version)$/;"	f	file:
main	Main.cpp	/^int main(int argc, char* argv[]) {$/;"	f
mcfnS_GetInstance	Publisher.cpp	/^CPublisher* CPublisher::mcfnS_GetInstance(){$/;"	f	class:CPublisher
mcfn_BunchSize	Configuration.h	/^inline int CConfiguration::mcfn_BunchSize(){$/;"	f	class:CConfiguration
mcfn_ChangeIgnoreLetters	DBOperations.cpp	/^std::string CDBOperations::mcfn_ChangeIgnoreLetters(char * pscL_InputTemp)$/;"	f	class:CDBOperations
mcfn_ExecuteQuery	DBOperations.cpp	/^int CDBOperations::mcfn_ExecuteQuery(std::string psL_Query)$/;"	f	class:CDBOperations
mcfn_ExecuteQuery	DBOperations.cpp	/^int CDBOperations::mcfn_ExecuteQuery(std::string psL_Query,mysqlpp::StoreQueryResult &CL_Result)$/;"	f	class:CDBOperations
mcfn_TaskId	Task.h	/^		int mcfn_TaskId(){$/;"	f	class:CTask
mcfn_Update	Task.h	/^		bool mcfn_Update(CTask *pCL_updateTask){$/;"	f	class:CTask
mcfn_addConnection	Publisher.cpp	/^bool CPublisher::mcfn_addConnection(CClientConnect *pCL_obj){$/;"	f	class:CPublisher
mcfn_addToQue	Publisher.h	/^		bool mcfn_addToQue(DeliverToEsme* pCL_Msg,bool bL_needCheck=true){$/;"	f	class:CPublisher
mcfn_checkAssignment	Task.cpp	/^bool CTask::mcfn_checkAssignment(){$/;"	f	class:CTask
mcfn_deleteConnection	Publisher.cpp	/^bool CPublisher::mcfn_deleteConnection(CClientConnect *pCL_obj){$/;"	f	class:CPublisher
mcfn_getAllSubTasksCompleted	Task.cpp	/^bool CTask::mcfn_getAllSubTasksCompleted(){$/;"	f	class:CTask
mcfn_getAssignedSubTask	Task.cpp	/^bool CTask::mcfn_getAssignedSubTask(CSubTask *&pCL_subTask){$/;"	f	class:CTask
mcfn_getAssignmentInterval	Configuration.h	/^inline int CConfiguration::mcfn_getAssignmentInterval(){$/;"	f	class:CConfiguration
mcfn_getChannelId	Configuration.h	/^inline int CConfiguration::mcfn_getChannelId(){$/;"	f	class:CConfiguration
mcfn_getConnection	Publisher.cpp	/^CClientConnect * CPublisher::mcfn_getConnection(){$/;"	f	class:CPublisher
mcfn_getDbIp	Configuration.h	/^inline const char* CConfiguration::mcfn_getDbIp(){$/;"	f	class:CConfiguration
mcfn_getDbName	Configuration.h	/^inline const char* CConfiguration::mcfn_getDbName(){$/;"	f	class:CConfiguration
mcfn_getDbPassword	Configuration.h	/^inline const char* CConfiguration::mcfn_getDbPassword(){$/;"	f	class:CConfiguration
mcfn_getDbUserName	Configuration.h	/^inline const char* CConfiguration::mcfn_getDbUserName(){$/;"	f	class:CConfiguration
mcfn_getEsmeId	Publisher.h	/^	int mcfn_getEsmeId(){return mesi_esmeId;}$/;"	f	class:CClientConnect
mcfn_getLogChangeInterval	Configuration.h	/^inline int CConfiguration::mcfn_getLogChangeInterval(){$/;"	f	class:CConfiguration
mcfn_getLogLevel	Configuration.h	/^inline int CConfiguration::mcfn_getLogLevel(){$/;"	f	class:CConfiguration
mcfn_getLogPath	Configuration.h	/^inline const char* CConfiguration::mcfn_getLogPath(){$/;"	f	class:CConfiguration
mcfn_getModuleId	Configuration.h	/^inline int CConfiguration::mcfn_getModuleId(){$/;"	f	class:CConfiguration
mcfn_getNumOfWorkerThreads	Configuration.h	/^inline int CConfiguration::mcfn_getNumOfWorkerThreads(){$/;"	f	class:CConfiguration
mcfn_getStatus	Task.h	/^		SUBTASK_STATUS mcfn_getStatus(){$/;"	f	class:CSubTask
mcfn_getTableName	Task.h	/^		std::string mcfn_getTableName(){$/;"	f	class:CSubTask
mcfn_getTaskPoolInterval	Configuration.h	/^inline int CConfiguration::mcfn_getTaskPoolInterval(){$/;"	f	class:CConfiguration
mcfn_getTaskStatus	Task.h	/^		SUBTASK_STATUS mcfn_getTaskStatus(){$/;"	f	class:CTask
mcfn_getThreadName	DBPicker.cpp	/^std::string CDBPicker::mcfn_getThreadName(void* vL_arg){$/;"	f	class:CDBPicker
mcfn_getThreadName	Publisher.h	/^		std::string mcfn_getThreadName(void *){$/;"	f	class:CPublisher
mcfn_isConnAvailable	Publisher.cpp	/^bool CPublisher::mcfn_isConnAvailable(){$/;"	f	class:CPublisher
mcfn_isExpired	Task.h	/^		bool mcfn_isExpired(){$/;"	f	class:CTask
mcfn_isPause	Task.cpp	/^bool CTask::mcfn_isPause(){$/;"	f	class:CTask
mcfn_loadConfigurations	Configuration.cpp	/^bool CConfiguration::mcfn_loadConfigurations(){$/;"	f	class:CConfiguration
mcfn_loadEsmeDetails	DBPicker.cpp	/^bool  CDBPicker::mcfn_loadEsmeDetails(int iL_modId){$/;"	f	class:CDBPicker
mcfn_loadSubTask	Task.cpp	/^bool CTask::mcfn_loadSubTask(){$/;"	f	class:CTask
mcfn_onConnect	Publisher.cpp	/^bool CClientConnect::mcfn_onConnect(){$/;"	f	class:CClientConnect
mcfn_receiveData	Publisher.cpp	/^bool CClientConnect::mcfn_receiveData(){$/;"	f	class:CClientConnect
mcfn_run	DBPicker.cpp	/^bool CDBPicker::mcfn_run(int iL_threadId,void *vL_arg){$/;"	f	class:CDBPicker
mcfn_run	Publisher.cpp	/^bool CPublisher::mcfn_run(int iL_threadId,void *p){$/;"	f	class:CPublisher
mcfn_setEsmeId	Publisher.h	/^	void mcfn_setEsmeId(int iL_esmeId){mesi_esmeId=iL_esmeId;}$/;"	f	class:CClientConnect
mcfn_setStatus	Task.h	/^		void mcfn_setStatus(SUBTASK_STATUS eL_status){$/;"	f	class:CSubTask
mcfn_setTaskStatus	Task.h	/^		void mcfn_setTaskStatus(SUBTASK_STATUS eL_status){$/;"	f	class:CTask
mcfn_setValues	Task.h	/^		void mcfn_setValues(DeliverToEsme *pCL_msg){$/;"	f	class:CTask
mcfn_taskAssignmentThread	DBPicker.cpp	/^bool CDBPicker::mcfn_taskAssignmentThread(){$/;"	f	class:CDBPicker
mcfn_taskSelectionThread	DBPicker.cpp	/^bool CDBPicker::mcfn_taskSelectionThread(){$/;"	f	class:CDBPicker
mcfn_updateTaskTableMap	Task.cpp	/^bool CTask::mcfn_updateTaskTableMap(int iL_taskId,char cL_status,std::string CL_tableName){$/;"	f	class:CTask
mcfn_workerThread	DBPicker.cpp	/^bool CDBPicker::mcfn_workerThread(int iL_threadId){$/;"	f	class:CDBPicker
meC_ClientList	Publisher.h	/^		std::vector<long> meC_ClientList;$/;"	m	class:CPublisher
meC_OA	Task.h	/^		std::string meC_OA;$/;"	m	class:CTask
meC_Que	Publisher.h	/^		CMsgQue<DeliverToEsme *> meC_Que;$/;"	m	class:CPublisher
meC_TaskList	DBPicker.h	/^		std::list <CTask*> meC_TaskList;	$/;"	m	class:CDBPicker
meC_connLock	Publisher.h	/^		CCriticalSection meC_connLock;$/;"	m	class:CPublisher
meC_createdBy	Task.h	/^		std::string meC_createdBy;$/;"	m	class:CTask
meC_msg	Task.h	/^		std::string meC_msg;$/;"	m	class:CTask
meC_srvCode	Task.h	/^		std::string meC_srvCode;$/;"	m	class:CTask
meC_subTasks	Task.h	/^		std::vector<CSubTask *> meC_subTasks;	$/;"	m	class:CTask
meC_tableName	Task.h	/^		std::string meC_tableName;$/;"	m	class:CSubTask
meC_taskListLock	DBPicker.h	/^		CCriticalSection meC_taskListLock;$/;"	m	class:CDBPicker
meC_taskName	Task.h	/^		std::string meC_taskName;$/;"	m	class:CTask
meC_workerQue	DBPicker.h	/^		CMsgQue <CTask*> meC_workerQue;	$/;"	m	class:CDBPicker
meE_globalStatus	Task.h	/^		SUBTASK_STATUS meE_globalStatus;$/;"	m	class:CTask
meE_status	Task.h	/^		SUBTASK_STATUS meE_status;$/;"	m	class:CSubTask
meb_isPause	Task.h	/^		bool  meb_isPause;$/;"	m	class:CTask
mefn_addTaskToList	DBPicker.cpp	/^bool CDBPicker::mefn_addTaskToList(CTask* pCL_Task){$/;"	f	class:CDBPicker
mefn_updateTaskStaus	DBPicker.cpp	/^bool CDBPicker::mefn_updateTaskStaus(int iL_taskId,int iL_status){$/;"	f	class:CDBPicker
mefn_updateTaskStaus	DBPicker.cpp	/^bool CDBPicker::mefn_updateTaskStaus(int iL_taskId,int iL_status,int iL_count,std::string CL_tableName,std::string CL_msgCsv){$/;"	f	class:CDBPicker
mesi_activeIdx	Publisher.h	/^		int mesi_activeIdx;$/;"	m	class:CPublisher
mesi_bunchSize	Configuration.h	/^		int mesi_bunchSize;$/;"	m	class:CConfiguration
mesi_channelId	Configuration.h	/^		int mesi_channelId;$/;"	m	class:CConfiguration
mesi_channelId	Task.h	/^		int mesi_channelId;$/;"	m	class:CTask
mesi_dcs	Task.h	/^		int mesi_dcs;$/;"	m	class:CTask
mesi_esmeId	Publisher.h	/^	int mesi_esmeId;$/;"	m	class:CClientConnect
mesi_expiryTime	Task.h	/^		int mesi_expiryTime;$/;"	m	class:CTask
mesi_interfaceId	Task.h	/^		int mesi_interfaceId; $/;"	m	class:CTask
mesi_langId	Task.h	/^		int mesi_langId;$/;"	m	class:CTask
mesi_logFileChangeInterval	Configuration.h	/^		int mesi_logFileChangeInterval;$/;"	m	class:CConfiguration
mesi_logLevel	Configuration.h	/^		int mesi_logLevel;$/;"	m	class:CConfiguration
mesi_moduleId	Configuration.h	/^		int mesi_moduleId;$/;"	m	class:CConfiguration
mesi_msgType	Task.h	/^		int mesi_msgType;$/;"	m	class:CTask
mesi_numOfWorkerThreads	Configuration.h	/^		int mesi_numOfWorkerThreads;$/;"	m	class:CConfiguration
mesi_regDel	Task.h	/^		int mesi_regDel;$/;"	m	class:CTask
mesi_taskAssignmentInterval	Configuration.h	/^		int mesi_taskAssignmentInterval;$/;"	m	class:CConfiguration
mesi_taskId	Task.h	/^		int mesi_taskId;$/;"	m	class:CTask
mesi_taskPoolInterval	Configuration.h	/^		int mesi_taskPoolInterval;$/;"	m	class:CConfiguration
mesi_totalConn	Publisher.h	/^		int mesi_totalConn;$/;"	m	class:CPublisher
mesi_workerThreadCounter	DBPicker.h	/^		int mesi_workerThreadCounter;$/;"	m	class:CDBPicker
pCG_publisherObj	Main.cpp	/^CDBPicker *pCG_publisherObj=NULL;$/;"	v
pmeC_Connections	DBPicker.h	/^		CClientConnect *pmeC_Connections;$/;"	m	class:CDBPicker
pmeC_Instance	Publisher.cpp	/^CPublisher * CPublisher::pmeC_Instance = NULL;$/;"	m	class:CPublisher	file:
pmeC_Instance	Publisher.h	/^		static CPublisher *pmeC_Instance;$/;"	m	class:CPublisher
pmesc_dbIp	Configuration.h	/^		char pmesc_dbIp[40];$/;"	m	class:CConfiguration
pmesc_dbName	Configuration.h	/^		char pmesc_dbName[40];$/;"	m	class:CConfiguration
pmesc_dbPassword	Configuration.h	/^		char pmesc_dbPassword[40];$/;"	m	class:CConfiguration
pmesc_dbUserName	Configuration.h	/^		char pmesc_dbUserName[40];$/;"	m	class:CConfiguration
pmesc_logPath	Configuration.h	/^		char pmesc_logPath[1024];$/;"	m	class:CConfiguration
~CDBOperations	DBOperations.cpp	/^CDBOperations::~CDBOperations() {$/;"	f	class:CDBOperations
~CDBPicker	DBPicker.cpp	/^CDBPicker::~CDBPicker(){$/;"	f	class:CDBPicker
~CPublisher	Publisher.h	/^		~CPublisher(){};$/;"	f	class:CPublisher
~CTask	Task.cpp	/^CTask::~CTask(){$/;"	f	class:CTask
