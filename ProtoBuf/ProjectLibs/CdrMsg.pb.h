// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_CdrMsg_2eproto__INCLUDED
#define PROTOBUF_CdrMsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "DeliverToEsme.pb.h"

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CdrMsg_2eproto();
void protobuf_AssignDesc_CdrMsg_2eproto();
void protobuf_ShutdownFile_CdrMsg_2eproto();

class SubmitMsg;
class DeliverMsg;
class CdrMsg;

enum CdrMsg_MSG_TYPE {
  CdrMsg_MSG_TYPE_SUBMIT = 1,
  CdrMsg_MSG_TYPE_DELIVER = 2,
  CdrMsg_MSG_TYPE_USSD_SUBMIT = 3
};
const ::google::protobuf::EnumDescriptor* CdrMsg_MSG_TYPE_descriptor();
bool CdrMsg_MSG_TYPE_IsValid(int value);
const CdrMsg_MSG_TYPE CdrMsg_MSG_TYPE_MSG_TYPE_MIN = CdrMsg_MSG_TYPE_SUBMIT;
const CdrMsg_MSG_TYPE CdrMsg_MSG_TYPE_MSG_TYPE_MAX = CdrMsg_MSG_TYPE_USSD_SUBMIT;

inline const ::std::string& CdrMsg_MSG_TYPE_Name(CdrMsg_MSG_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    CdrMsg_MSG_TYPE_descriptor(), value);
}
inline bool CdrMsg_MSG_TYPE_Parse(
    const ::std::string& name, CdrMsg_MSG_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CdrMsg_MSG_TYPE>(
    CdrMsg_MSG_TYPE_descriptor(), name, value);
}
// ===================================================================

class SubmitMsg : public ::google::protobuf::Message {
 public:
  SubmitMsg();
  virtual ~SubmitMsg();
  
  SubmitMsg(const SubmitMsg& from);
  
  inline SubmitMsg& operator=(const SubmitMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubmitMsg& default_instance();
  void Swap(SubmitMsg* other);
  
  // implements Message ----------------------------------------------
  
  SubmitMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubmitMsg& from);
  void MergeFrom(const SubmitMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // required uint32 msg_id = 2;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  inline ::google::protobuf::uint32 msg_id() const;
  inline void set_msg_id(::google::protobuf::uint32 value);
  
  // required string oa = 3;
  inline bool has_oa() const;
  inline void clear_oa();
  static const int kOaFieldNumber = 3;
  inline const ::std::string& oa() const;
  inline void set_oa(const ::std::string& value);
  inline void set_oa(const char* value);
  inline void set_oa(const char* value, size_t size);
  inline ::std::string* mutable_oa();
  
  // required string da = 4;
  inline bool has_da() const;
  inline void clear_da();
  static const int kDaFieldNumber = 4;
  inline const ::std::string& da() const;
  inline void set_da(const ::std::string& value);
  inline void set_da(const char* value);
  inline void set_da(const char* value, size_t size);
  inline ::std::string* mutable_da();
  
  // required bytes msg = 5;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 5;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const void* value, size_t size);
  inline ::std::string* mutable_msg();
  
  // required int32 interface_id = 6;
  inline bool has_interface_id() const;
  inline void clear_interface_id();
  static const int kInterfaceIdFieldNumber = 6;
  inline ::google::protobuf::int32 interface_id() const;
  inline void set_interface_id(::google::protobuf::int32 value);
  
  // optional int32 reg_del = 7;
  inline bool has_reg_del() const;
  inline void clear_reg_del();
  static const int kRegDelFieldNumber = 7;
  inline ::google::protobuf::int32 reg_del() const;
  inline void set_reg_del(::google::protobuf::int32 value);
  
  // optional int32 circle_id = 8;
  inline bool has_circle_id() const;
  inline void clear_circle_id();
  static const int kCircleIdFieldNumber = 8;
  inline ::google::protobuf::int32 circle_id() const;
  inline void set_circle_id(::google::protobuf::int32 value);
  
  // optional int32 channel_id = 9;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 9;
  inline ::google::protobuf::int32 channel_id() const;
  inline void set_channel_id(::google::protobuf::int32 value);
  
  // optional int32 expiry_time = 10;
  inline bool has_expiry_time() const;
  inline void clear_expiry_time();
  static const int kExpiryTimeFieldNumber = 10;
  inline ::google::protobuf::int32 expiry_time() const;
  inline void set_expiry_time(::google::protobuf::int32 value);
  
  // optional int32 pid = 11;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 11;
  inline ::google::protobuf::int32 pid() const;
  inline void set_pid(::google::protobuf::int32 value);
  
  // optional int32 dcs = 12;
  inline bool has_dcs() const;
  inline void clear_dcs();
  static const int kDcsFieldNumber = 12;
  inline ::google::protobuf::int32 dcs() const;
  inline void set_dcs(::google::protobuf::int32 value);
  
  // optional int32 lang_id = 13 [default = 0];
  inline bool has_lang_id() const;
  inline void clear_lang_id();
  static const int kLangIdFieldNumber = 13;
  inline ::google::protobuf::int32 lang_id() const;
  inline void set_lang_id(::google::protobuf::int32 value);
  
  // optional int32 status = 14;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 14;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);
  
  // optional int32 submit_time = 15;
  inline bool has_submit_time() const;
  inline void clear_submit_time();
  static const int kSubmitTimeFieldNumber = 15;
  inline ::google::protobuf::int32 submit_time() const;
  inline void set_submit_time(::google::protobuf::int32 value);
  
  // optional int32 submit_msgid = 16;
  inline bool has_submit_msgid() const;
  inline void clear_submit_msgid();
  static const int kSubmitMsgidFieldNumber = 16;
  inline ::google::protobuf::int32 submit_msgid() const;
  inline void set_submit_msgid(::google::protobuf::int32 value);
  
  // optional int32 session_endtime = 17;
  inline bool has_session_endtime() const;
  inline void clear_session_endtime();
  static const int kSessionEndtimeFieldNumber = 17;
  inline ::google::protobuf::int32 session_endtime() const;
  inline void set_session_endtime(::google::protobuf::int32 value);
  
  // optional int32 sender_sessionid = 18;
  inline bool has_sender_sessionid() const;
  inline void clear_sender_sessionid();
  static const int kSenderSessionidFieldNumber = 18;
  inline ::google::protobuf::int32 sender_sessionid() const;
  inline void set_sender_sessionid(::google::protobuf::int32 value);
  
  // optional int32 receiver_sessionid = 19;
  inline bool has_receiver_sessionid() const;
  inline void clear_receiver_sessionid();
  static const int kReceiverSessionidFieldNumber = 19;
  inline ::google::protobuf::int32 receiver_sessionid() const;
  inline void set_receiver_sessionid(::google::protobuf::int32 value);
  
  // optional int32 charging_status = 20;
  inline bool has_charging_status() const;
  inline void clear_charging_status();
  static const int kChargingStatusFieldNumber = 20;
  inline ::google::protobuf::int32 charging_status() const;
  inline void set_charging_status(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 task_id_;
  ::google::protobuf::uint32 msg_id_;
  ::std::string* oa_;
  static const ::std::string _default_oa_;
  ::std::string* da_;
  static const ::std::string _default_da_;
  ::std::string* msg_;
  static const ::std::string _default_msg_;
  ::google::protobuf::int32 interface_id_;
  ::google::protobuf::int32 reg_del_;
  ::google::protobuf::int32 circle_id_;
  ::google::protobuf::int32 channel_id_;
  ::google::protobuf::int32 expiry_time_;
  ::google::protobuf::int32 pid_;
  ::google::protobuf::int32 dcs_;
  ::google::protobuf::int32 lang_id_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 submit_time_;
  ::google::protobuf::int32 submit_msgid_;
  ::google::protobuf::int32 session_endtime_;
  ::google::protobuf::int32 sender_sessionid_;
  ::google::protobuf::int32 receiver_sessionid_;
  ::google::protobuf::int32 charging_status_;
  friend void  protobuf_AddDesc_CdrMsg_2eproto();
  friend void protobuf_AssignDesc_CdrMsg_2eproto();
  friend void protobuf_ShutdownFile_CdrMsg_2eproto();
  ::google::protobuf::uint32 _has_bits_[(20 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SubmitMsg* default_instance_;
};
// -------------------------------------------------------------------

class DeliverMsg : public ::google::protobuf::Message {
 public:
  DeliverMsg();
  virtual ~DeliverMsg();
  
  DeliverMsg(const DeliverMsg& from);
  
  inline DeliverMsg& operator=(const DeliverMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeliverMsg& default_instance();
  void Swap(DeliverMsg* other);
  
  // implements Message ----------------------------------------------
  
  DeliverMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeliverMsg& from);
  void MergeFrom(const DeliverMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 submit_msgid = 1;
  inline bool has_submit_msgid() const;
  inline void clear_submit_msgid();
  static const int kSubmitMsgidFieldNumber = 1;
  inline ::google::protobuf::int32 submit_msgid() const;
  inline void set_submit_msgid(::google::protobuf::int32 value);
  
  // optional int32 submit_time = 2;
  inline bool has_submit_time() const;
  inline void clear_submit_time();
  static const int kSubmitTimeFieldNumber = 2;
  inline ::google::protobuf::int32 submit_time() const;
  inline void set_submit_time(::google::protobuf::int32 value);
  
  // optional int32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);
  
  // optional int32 delivery_time = 4;
  inline bool has_delivery_time() const;
  inline void clear_delivery_time();
  static const int kDeliveryTimeFieldNumber = 4;
  inline ::google::protobuf::int32 delivery_time() const;
  inline void set_delivery_time(::google::protobuf::int32 value);
  
  // optional int32 error_code = 5;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 5;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 submit_msgid_;
  ::google::protobuf::int32 submit_time_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 delivery_time_;
  ::google::protobuf::int32 error_code_;
  friend void  protobuf_AddDesc_CdrMsg_2eproto();
  friend void protobuf_AssignDesc_CdrMsg_2eproto();
  friend void protobuf_ShutdownFile_CdrMsg_2eproto();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DeliverMsg* default_instance_;
};
// -------------------------------------------------------------------

class CdrMsg : public ::google::protobuf::Message {
 public:
  CdrMsg();
  virtual ~CdrMsg();
  
  CdrMsg(const CdrMsg& from);
  
  inline CdrMsg& operator=(const CdrMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CdrMsg& default_instance();
  void Swap(CdrMsg* other);
  
  // implements Message ----------------------------------------------
  
  CdrMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CdrMsg& from);
  void MergeFrom(const CdrMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  typedef CdrMsg_MSG_TYPE MSG_TYPE;
  static const MSG_TYPE SUBMIT = CdrMsg_MSG_TYPE_SUBMIT;
  static const MSG_TYPE DELIVER = CdrMsg_MSG_TYPE_DELIVER;
  static const MSG_TYPE USSD_SUBMIT = CdrMsg_MSG_TYPE_USSD_SUBMIT;
  static inline const ::google::protobuf::EnumDescriptor*
  MSG_TYPE_descriptor() {
    return CdrMsg_MSG_TYPE_descriptor();
  }
  static inline bool MSG_TYPE_IsValid(int value) {
    return CdrMsg_MSG_TYPE_IsValid(value);
  }
  static inline const ::std::string& MSG_TYPE_Name(MSG_TYPE value) {
    return CdrMsg_MSG_TYPE_Name(value);
  }
  static inline bool MSG_TYPE_Parse(const ::std::string& name,
      MSG_TYPE* value) {
    return CdrMsg_MSG_TYPE_Parse(name, value);
  }
  static const MSG_TYPE MSG_TYPE_MIN =
    CdrMsg_MSG_TYPE_MSG_TYPE_MIN;
  static const MSG_TYPE MSG_TYPE_MAX =
    CdrMsg_MSG_TYPE_MSG_TYPE_MAX;
  
  // accessors -------------------------------------------------------
  
  // required .CdrMsg.MSG_TYPE msg_type = 1;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  inline ::CdrMsg_MSG_TYPE msg_type() const;
  inline void set_msg_type(::CdrMsg_MSG_TYPE value);
  
  // optional .DeliverToEsme submit_msg = 2;
  inline bool has_submit_msg() const;
  inline void clear_submit_msg();
  static const int kSubmitMsgFieldNumber = 2;
  inline const ::DeliverToEsme& submit_msg() const;
  inline ::DeliverToEsme* mutable_submit_msg();
  
  // optional .DeliverMsg deliver_msg = 3;
  inline bool has_deliver_msg() const;
  inline void clear_deliver_msg();
  static const int kDeliverMsgFieldNumber = 3;
  inline const ::DeliverMsg& deliver_msg() const;
  inline ::DeliverMsg* mutable_deliver_msg();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int msg_type_;
  ::DeliverToEsme* submit_msg_;
  ::DeliverMsg* deliver_msg_;
  friend void  protobuf_AddDesc_CdrMsg_2eproto();
  friend void protobuf_AssignDesc_CdrMsg_2eproto();
  friend void protobuf_ShutdownFile_CdrMsg_2eproto();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CdrMsg* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// SubmitMsg

// required uint32 task_id = 1;
inline bool SubmitMsg::has_task_id() const {
  return _has_bit(0);
}
inline void SubmitMsg::clear_task_id() {
  task_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 SubmitMsg::task_id() const {
  return task_id_;
}
inline void SubmitMsg::set_task_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  task_id_ = value;
}

// required uint32 msg_id = 2;
inline bool SubmitMsg::has_msg_id() const {
  return _has_bit(1);
}
inline void SubmitMsg::clear_msg_id() {
  msg_id_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 SubmitMsg::msg_id() const {
  return msg_id_;
}
inline void SubmitMsg::set_msg_id(::google::protobuf::uint32 value) {
  _set_bit(1);
  msg_id_ = value;
}

// required string oa = 3;
inline bool SubmitMsg::has_oa() const {
  return _has_bit(2);
}
inline void SubmitMsg::clear_oa() {
  if (oa_ != &_default_oa_) {
    oa_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& SubmitMsg::oa() const {
  return *oa_;
}
inline void SubmitMsg::set_oa(const ::std::string& value) {
  _set_bit(2);
  if (oa_ == &_default_oa_) {
    oa_ = new ::std::string;
  }
  oa_->assign(value);
}
inline void SubmitMsg::set_oa(const char* value) {
  _set_bit(2);
  if (oa_ == &_default_oa_) {
    oa_ = new ::std::string;
  }
  oa_->assign(value);
}
inline void SubmitMsg::set_oa(const char* value, size_t size) {
  _set_bit(2);
  if (oa_ == &_default_oa_) {
    oa_ = new ::std::string;
  }
  oa_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SubmitMsg::mutable_oa() {
  _set_bit(2);
  if (oa_ == &_default_oa_) {
    oa_ = new ::std::string;
  }
  return oa_;
}

// required string da = 4;
inline bool SubmitMsg::has_da() const {
  return _has_bit(3);
}
inline void SubmitMsg::clear_da() {
  if (da_ != &_default_da_) {
    da_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& SubmitMsg::da() const {
  return *da_;
}
inline void SubmitMsg::set_da(const ::std::string& value) {
  _set_bit(3);
  if (da_ == &_default_da_) {
    da_ = new ::std::string;
  }
  da_->assign(value);
}
inline void SubmitMsg::set_da(const char* value) {
  _set_bit(3);
  if (da_ == &_default_da_) {
    da_ = new ::std::string;
  }
  da_->assign(value);
}
inline void SubmitMsg::set_da(const char* value, size_t size) {
  _set_bit(3);
  if (da_ == &_default_da_) {
    da_ = new ::std::string;
  }
  da_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SubmitMsg::mutable_da() {
  _set_bit(3);
  if (da_ == &_default_da_) {
    da_ = new ::std::string;
  }
  return da_;
}

// required bytes msg = 5;
inline bool SubmitMsg::has_msg() const {
  return _has_bit(4);
}
inline void SubmitMsg::clear_msg() {
  if (msg_ != &_default_msg_) {
    msg_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& SubmitMsg::msg() const {
  return *msg_;
}
inline void SubmitMsg::set_msg(const ::std::string& value) {
  _set_bit(4);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void SubmitMsg::set_msg(const char* value) {
  _set_bit(4);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void SubmitMsg::set_msg(const void* value, size_t size) {
  _set_bit(4);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SubmitMsg::mutable_msg() {
  _set_bit(4);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  return msg_;
}

// required int32 interface_id = 6;
inline bool SubmitMsg::has_interface_id() const {
  return _has_bit(5);
}
inline void SubmitMsg::clear_interface_id() {
  interface_id_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 SubmitMsg::interface_id() const {
  return interface_id_;
}
inline void SubmitMsg::set_interface_id(::google::protobuf::int32 value) {
  _set_bit(5);
  interface_id_ = value;
}

// optional int32 reg_del = 7;
inline bool SubmitMsg::has_reg_del() const {
  return _has_bit(6);
}
inline void SubmitMsg::clear_reg_del() {
  reg_del_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 SubmitMsg::reg_del() const {
  return reg_del_;
}
inline void SubmitMsg::set_reg_del(::google::protobuf::int32 value) {
  _set_bit(6);
  reg_del_ = value;
}

// optional int32 circle_id = 8;
inline bool SubmitMsg::has_circle_id() const {
  return _has_bit(7);
}
inline void SubmitMsg::clear_circle_id() {
  circle_id_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 SubmitMsg::circle_id() const {
  return circle_id_;
}
inline void SubmitMsg::set_circle_id(::google::protobuf::int32 value) {
  _set_bit(7);
  circle_id_ = value;
}

// optional int32 channel_id = 9;
inline bool SubmitMsg::has_channel_id() const {
  return _has_bit(8);
}
inline void SubmitMsg::clear_channel_id() {
  channel_id_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 SubmitMsg::channel_id() const {
  return channel_id_;
}
inline void SubmitMsg::set_channel_id(::google::protobuf::int32 value) {
  _set_bit(8);
  channel_id_ = value;
}

// optional int32 expiry_time = 10;
inline bool SubmitMsg::has_expiry_time() const {
  return _has_bit(9);
}
inline void SubmitMsg::clear_expiry_time() {
  expiry_time_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 SubmitMsg::expiry_time() const {
  return expiry_time_;
}
inline void SubmitMsg::set_expiry_time(::google::protobuf::int32 value) {
  _set_bit(9);
  expiry_time_ = value;
}

// optional int32 pid = 11;
inline bool SubmitMsg::has_pid() const {
  return _has_bit(10);
}
inline void SubmitMsg::clear_pid() {
  pid_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 SubmitMsg::pid() const {
  return pid_;
}
inline void SubmitMsg::set_pid(::google::protobuf::int32 value) {
  _set_bit(10);
  pid_ = value;
}

// optional int32 dcs = 12;
inline bool SubmitMsg::has_dcs() const {
  return _has_bit(11);
}
inline void SubmitMsg::clear_dcs() {
  dcs_ = 0;
  _clear_bit(11);
}
inline ::google::protobuf::int32 SubmitMsg::dcs() const {
  return dcs_;
}
inline void SubmitMsg::set_dcs(::google::protobuf::int32 value) {
  _set_bit(11);
  dcs_ = value;
}

// optional int32 lang_id = 13 [default = 0];
inline bool SubmitMsg::has_lang_id() const {
  return _has_bit(12);
}
inline void SubmitMsg::clear_lang_id() {
  lang_id_ = 0;
  _clear_bit(12);
}
inline ::google::protobuf::int32 SubmitMsg::lang_id() const {
  return lang_id_;
}
inline void SubmitMsg::set_lang_id(::google::protobuf::int32 value) {
  _set_bit(12);
  lang_id_ = value;
}

// optional int32 status = 14;
inline bool SubmitMsg::has_status() const {
  return _has_bit(13);
}
inline void SubmitMsg::clear_status() {
  status_ = 0;
  _clear_bit(13);
}
inline ::google::protobuf::int32 SubmitMsg::status() const {
  return status_;
}
inline void SubmitMsg::set_status(::google::protobuf::int32 value) {
  _set_bit(13);
  status_ = value;
}

// optional int32 submit_time = 15;
inline bool SubmitMsg::has_submit_time() const {
  return _has_bit(14);
}
inline void SubmitMsg::clear_submit_time() {
  submit_time_ = 0;
  _clear_bit(14);
}
inline ::google::protobuf::int32 SubmitMsg::submit_time() const {
  return submit_time_;
}
inline void SubmitMsg::set_submit_time(::google::protobuf::int32 value) {
  _set_bit(14);
  submit_time_ = value;
}

// optional int32 submit_msgid = 16;
inline bool SubmitMsg::has_submit_msgid() const {
  return _has_bit(15);
}
inline void SubmitMsg::clear_submit_msgid() {
  submit_msgid_ = 0;
  _clear_bit(15);
}
inline ::google::protobuf::int32 SubmitMsg::submit_msgid() const {
  return submit_msgid_;
}
inline void SubmitMsg::set_submit_msgid(::google::protobuf::int32 value) {
  _set_bit(15);
  submit_msgid_ = value;
}

// optional int32 session_endtime = 17;
inline bool SubmitMsg::has_session_endtime() const {
  return _has_bit(16);
}
inline void SubmitMsg::clear_session_endtime() {
  session_endtime_ = 0;
  _clear_bit(16);
}
inline ::google::protobuf::int32 SubmitMsg::session_endtime() const {
  return session_endtime_;
}
inline void SubmitMsg::set_session_endtime(::google::protobuf::int32 value) {
  _set_bit(16);
  session_endtime_ = value;
}

// optional int32 sender_sessionid = 18;
inline bool SubmitMsg::has_sender_sessionid() const {
  return _has_bit(17);
}
inline void SubmitMsg::clear_sender_sessionid() {
  sender_sessionid_ = 0;
  _clear_bit(17);
}
inline ::google::protobuf::int32 SubmitMsg::sender_sessionid() const {
  return sender_sessionid_;
}
inline void SubmitMsg::set_sender_sessionid(::google::protobuf::int32 value) {
  _set_bit(17);
  sender_sessionid_ = value;
}

// optional int32 receiver_sessionid = 19;
inline bool SubmitMsg::has_receiver_sessionid() const {
  return _has_bit(18);
}
inline void SubmitMsg::clear_receiver_sessionid() {
  receiver_sessionid_ = 0;
  _clear_bit(18);
}
inline ::google::protobuf::int32 SubmitMsg::receiver_sessionid() const {
  return receiver_sessionid_;
}
inline void SubmitMsg::set_receiver_sessionid(::google::protobuf::int32 value) {
  _set_bit(18);
  receiver_sessionid_ = value;
}

// optional int32 charging_status = 20;
inline bool SubmitMsg::has_charging_status() const {
  return _has_bit(19);
}
inline void SubmitMsg::clear_charging_status() {
  charging_status_ = 0;
  _clear_bit(19);
}
inline ::google::protobuf::int32 SubmitMsg::charging_status() const {
  return charging_status_;
}
inline void SubmitMsg::set_charging_status(::google::protobuf::int32 value) {
  _set_bit(19);
  charging_status_ = value;
}

// -------------------------------------------------------------------

// DeliverMsg

// optional int32 submit_msgid = 1;
inline bool DeliverMsg::has_submit_msgid() const {
  return _has_bit(0);
}
inline void DeliverMsg::clear_submit_msgid() {
  submit_msgid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 DeliverMsg::submit_msgid() const {
  return submit_msgid_;
}
inline void DeliverMsg::set_submit_msgid(::google::protobuf::int32 value) {
  _set_bit(0);
  submit_msgid_ = value;
}

// optional int32 submit_time = 2;
inline bool DeliverMsg::has_submit_time() const {
  return _has_bit(1);
}
inline void DeliverMsg::clear_submit_time() {
  submit_time_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 DeliverMsg::submit_time() const {
  return submit_time_;
}
inline void DeliverMsg::set_submit_time(::google::protobuf::int32 value) {
  _set_bit(1);
  submit_time_ = value;
}

// optional int32 status = 3;
inline bool DeliverMsg::has_status() const {
  return _has_bit(2);
}
inline void DeliverMsg::clear_status() {
  status_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 DeliverMsg::status() const {
  return status_;
}
inline void DeliverMsg::set_status(::google::protobuf::int32 value) {
  _set_bit(2);
  status_ = value;
}

// optional int32 delivery_time = 4;
inline bool DeliverMsg::has_delivery_time() const {
  return _has_bit(3);
}
inline void DeliverMsg::clear_delivery_time() {
  delivery_time_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 DeliverMsg::delivery_time() const {
  return delivery_time_;
}
inline void DeliverMsg::set_delivery_time(::google::protobuf::int32 value) {
  _set_bit(3);
  delivery_time_ = value;
}

// optional int32 error_code = 5;
inline bool DeliverMsg::has_error_code() const {
  return _has_bit(4);
}
inline void DeliverMsg::clear_error_code() {
  error_code_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 DeliverMsg::error_code() const {
  return error_code_;
}
inline void DeliverMsg::set_error_code(::google::protobuf::int32 value) {
  _set_bit(4);
  error_code_ = value;
}

// -------------------------------------------------------------------

// CdrMsg

// required .CdrMsg.MSG_TYPE msg_type = 1;
inline bool CdrMsg::has_msg_type() const {
  return _has_bit(0);
}
inline void CdrMsg::clear_msg_type() {
  msg_type_ = 1;
  _clear_bit(0);
}
inline ::CdrMsg_MSG_TYPE CdrMsg::msg_type() const {
  return static_cast< ::CdrMsg_MSG_TYPE >(msg_type_);
}
inline void CdrMsg::set_msg_type(::CdrMsg_MSG_TYPE value) {
  GOOGLE_DCHECK(::CdrMsg_MSG_TYPE_IsValid(value));
  _set_bit(0);
  msg_type_ = value;
}

// optional .DeliverToEsme submit_msg = 2;
inline bool CdrMsg::has_submit_msg() const {
  return _has_bit(1);
}
inline void CdrMsg::clear_submit_msg() {
  if (submit_msg_ != NULL) submit_msg_->::DeliverToEsme::Clear();
  _clear_bit(1);
}
inline const ::DeliverToEsme& CdrMsg::submit_msg() const {
  return submit_msg_ != NULL ? *submit_msg_ : *default_instance_->submit_msg_;
}
inline ::DeliverToEsme* CdrMsg::mutable_submit_msg() {
  _set_bit(1);
  if (submit_msg_ == NULL) submit_msg_ = new ::DeliverToEsme;
  return submit_msg_;
}

// optional .DeliverMsg deliver_msg = 3;
inline bool CdrMsg::has_deliver_msg() const {
  return _has_bit(2);
}
inline void CdrMsg::clear_deliver_msg() {
  if (deliver_msg_ != NULL) deliver_msg_->::DeliverMsg::Clear();
  _clear_bit(2);
}
inline const ::DeliverMsg& CdrMsg::deliver_msg() const {
  return deliver_msg_ != NULL ? *deliver_msg_ : *default_instance_->deliver_msg_;
}
inline ::DeliverMsg* CdrMsg::mutable_deliver_msg() {
  _set_bit(2);
  if (deliver_msg_ == NULL) deliver_msg_ = new ::DeliverMsg;
  return deliver_msg_;
}

#endif  // PROTOBUF_CdrMsg_2eproto__INCLUDED
